name: Load Testing - 1500 Users (Optimized)

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Test Type'
        required: true
        default: 'full'
        type: choice
        options:
        - quick
        - full
      target_users:
        description: 'Number of Users (for custom tests)'
        required: false
        default: '100'
        type: string

jobs:
  load-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install
      
    - name: Install k6
      run: |
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6
        
    - name: Run Quick Test
      if: github.event.inputs.test_type == 'quick'
      run: k6 run load-tests/quick-test.js --out json=results.json
      
    - name: Run Full Test (1500 users - optimized)
      if: github.event.inputs.test_type == 'full'
      run: k6 run load-tests/local-1500-users.js --out json=results.json
      
    - name: Generate Reports
      if: always()
      run: node load-tests/report-generator.js
        
    - name: Upload results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: load-test-results
        path: |
          results.json
          load-test-report.html
          detailed-report.json
        retention-days: 30
        
    - name: Display summary
      if: always()
      run: |
        if [ -f "detailed-report.json" ]; then
          node -e "
            const report = JSON.parse(require('fs').readFileSync('detailed-report.json', 'utf8'));
            console.log('## 🚀 Load Test Results Summary');
            console.log('');
            console.log('### 📊 Performance Metrics');
            console.log('- **Test Duration:** ' + report.summary.testDuration);
            console.log('- **Total Requests:** ' + report.summary.totalRequests.toLocaleString());
            console.log('- **Error Rate:** ' + report.summary.errorRate);
            console.log('- **Avg Response Time:** ' + report.summary.avgResponseTime);
            console.log('- **P95 Response Time:** ' + report.summary.p95ResponseTime);
            console.log('- **Throughput:** ' + report.summary.requestsPerSecond + ' req/s');
            console.log('');
            console.log('### 🎯 Threshold Results');
            report.thresholds.forEach(t => {
              const status = t.passed ? '✅ PASS' : '❌ FAIL';
              console.log('- **' + t.name + ':** ' + status + ' (' + t.actual + ' / ' + t.threshold + ')');
            });
            console.log('');
            console.log('### ✅ Check Results');
            report.checks.forEach(c => {
              const status = c.passRate === '100.0%' ? '✅' : '⚠️';
              console.log('- **' + c.name + ':** ' + status + ' ' + c.passRate + ' (' + c.passed + '/' + c.total + ')');
            });
            console.log('');
            if (report.recommendations.length > 0) {
              console.log('### 💡 Recommendations');
              report.recommendations.forEach(r => {
                const icon = r.type === 'success' ? '✅' : r.type === 'warning' ? '⚠️' : '🚨';
                console.log('- ' + icon + ' **' + r.category + ':** ' + r.message);
              });
              console.log('');
            }
            console.log('### 📈 Detailed Reports');
            console.log('- **HTML Report:** Available in artifacts (load-test-report.html)');
            console.log('- **JSON Report:** Available in artifacts (detailed-report.json)');
          " >> $GITHUB_STEP_SUMMARY
        else
          echo "## Load Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Test Type: ${{ github.event.inputs.test_type }}" >> $GITHUB_STEP_SUMMARY
          echo "- Users: ${{ github.event.inputs.target_users }}" >> $GITHUB_STEP_SUMMARY
          echo "- Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- Results available in artifacts" >> $GITHUB_STEP_SUMMARY
        fi 