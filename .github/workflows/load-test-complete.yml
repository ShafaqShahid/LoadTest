name: Load Testing - Complete (Quick, 1000, 1500, Distributed)

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Test Type'
        required: true
        default: 'quick'
        type: choice
        options:
        - quick
        - safe-1000
        - single-1500
        - distributed
      delay_between_tests:
        description: 'Delay between distributed tests (minutes)'
        required: false
        default: '2'
        type: string

jobs:
  # Job 1: Quick Test (100 users, 4 minutes)
  quick-test:
    runs-on: ubuntu-latest
    name: Quick Test (100 users)
    if: github.event.inputs.test_type == 'quick'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install
      
    - name: Install k6
      run: |
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6
        
    - name: Run Quick Test
      run: k6 run load-tests/quick-test.js --out json=quick-results.json
        
    - name: Upload Quick Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: quick-test-results
        path: quick-results.json
        retention-days: 30
        
    - name: Display Quick Test Summary
      if: always()
      run: |
        echo "## Quick Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Test Type**: Quick Test" >> $GITHUB_STEP_SUMMARY
        echo "- **Users**: 100 concurrent" >> $GITHUB_STEP_SUMMARY
        echo "- **Duration**: 4 minutes" >> $GITHUB_STEP_SUMMARY
        echo "- **Purpose**: Setup verification" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

  # Job 2: Safe 1000 Users Test (GitHub Actions Safe)
  safe-1000-test:
    runs-on: ubuntu-latest
    name: Safe Test (1000 users)
    if: github.event.inputs.test_type == 'safe-1000'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install
      
    - name: Install k6
      run: |
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6
        
    - name: Run Safe 1000 Users Test
      run: k6 run load-tests/github-actions-1000-users.js --out json=safe-1000-results.json
        
    - name: Upload Safe 1000 Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: safe-1000-test-results
        path: safe-1000-results.json
        retention-days: 30
        
    - name: Display Safe 1000 Test Summary
      if: always()
      run: |
        echo "## Safe 1000 Users Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Test Type**: Safe Load Test" >> $GITHUB_STEP_SUMMARY
        echo "- **Users**: 1000 concurrent" >> $GITHUB_STEP_SUMMARY
        echo "- **Duration**: 25 minutes" >> $GITHUB_STEP_SUMMARY
        echo "- **Purpose**: GitHub Actions safe testing" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

  # Job 3: Single 1500 Users Test (Optimized)
  single-1500-test:
    runs-on: ubuntu-latest
    name: Single Test (1500 users)
    if: github.event.inputs.test_type == 'single-1500'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install
      
    - name: Install k6
      run: |
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6
        
    - name: Run Single 1500 Users Test
      run: k6 run load-tests/local-1500-users.js --out json=single-1500-results.json
        
    - name: Upload Single 1500 Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: single-1500-test-results
        path: single-1500-results.json
        retention-days: 30
        
    - name: Display Single 1500 Test Summary
      if: always()
      run: |
        echo "## Single 1500 Users Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Test Type**: Single Load Test (Optimized)" >> $GITHUB_STEP_SUMMARY
        echo "- **Users**: 1500 concurrent" >> $GITHUB_STEP_SUMMARY
        echo "- **Duration**: 30 minutes" >> $GITHUB_STEP_SUMMARY
        echo "- **Purpose**: Production load testing" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

  # Job 4: Distributed Test Part 1 (1500 users)
  distributed-test-1:
    runs-on: ubuntu-latest
    name: Distributed Test - Part 1/3 (1500 users)
    if: github.event.inputs.test_type == 'distributed'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install
      
    - name: Install k6
      run: |
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6
        
    - name: Run Distributed Test Part 1
      run: k6 run load-tests/distributed-test-1.js --out json=results-part1.json
        
    - name: Upload Part 1 Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: load-test-results-part1
        path: results-part1.json
        retention-days: 30

  # Job 5: Distributed Test Part 2 (1500 users)
  distributed-test-2:
    runs-on: ubuntu-latest
    name: Distributed Test - Part 2/3 (1500 users)
    needs: distributed-test-1
    if: github.event.inputs.test_type == 'distributed'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install
      
    - name: Install k6
      run: |
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6
        
    - name: Wait for delay
      run: sleep ${{ github.event.inputs.delay_between_tests }}m
        
    - name: Run Distributed Test Part 2
      run: k6 run load-tests/distributed-test-2.js --out json=results-part2.json
        
    - name: Upload Part 2 Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: load-test-results-part2
        path: results-part2.json
        retention-days: 30

  # Job 6: Distributed Test Part 3 (1500 users)
  distributed-test-3:
    runs-on: ubuntu-latest
    name: Distributed Test - Part 3/3 (1500 users)
    needs: distributed-test-2
    if: github.event.inputs.test_type == 'distributed'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install
      
    - name: Install k6
      run: |
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6
        
    - name: Wait for delay
      run: sleep ${{ github.event.inputs.delay_between_tests }}m
        
    - name: Run Distributed Test Part 3
      run: k6 run load-tests/distributed-test-3.js --out json=results-part3.json
        
    - name: Upload Part 3 Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: load-test-results-part3
        path: results-part3.json
        retention-days: 30

  # Job 7: Combine Distributed Results
  combine-results:
    runs-on: ubuntu-latest
    name: Combine Distributed Results
    needs: [distributed-test-1, distributed-test-2, distributed-test-3]
    if: github.event.inputs.test_type == 'distributed'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all results
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Combine Results
      run: |
        echo "## Combined Load Test Results - 3000 Users" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Test Summary:" >> $GITHUB_STEP_SUMMARY
        echo "- **Total Users**: 3000 (3 x 1500)" >> $GITHUB_STEP_SUMMARY
        echo "- **Total Duration**: ~135 minutes (3 x 45 minutes)" >> $GITHUB_STEP_SUMMARY
        echo "- **Test Parts**: 3 distributed tests" >> $GITHUB_STEP_SUMMARY
        echo "- **Delay Between Tests**: ${{ github.event.inputs.delay_between_tests }} minutes" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Individual Results:" >> $GITHUB_STEP_SUMMARY
        echo "- Part 1: 1500 users - [Download](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
        echo "- Part 2: 1500 users - [Download](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
        echo "- Part 3: 1500 users - [Download](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Combined Metrics:" >> $GITHUB_STEP_SUMMARY
        echo "- **Total Requests**: ~18,000 (3 x 6,000)" >> $GITHUB_STEP_SUMMARY
        echo "- **Peak Load**: 3000 concurrent users" >> $GITHUB_STEP_SUMMARY
        echo "- **Cost**: FREE (GitHub Actions)" >> $GITHUB_STEP_SUMMARY
        
    - name: Create Combined Report
      run: |
        echo '{"total_users": 3000, "parts": 3, "users_per_part": 1500, "duration_per_part": "45 minutes", "delay_between_tests": "${{ github.event.inputs.delay_between_tests }} minutes", "status": "completed"}' > combined-results.json
        
    - name: Upload Combined Results
      uses: actions/upload-artifact@v4
      with:
        name: combined-load-test-results
        path: |
          combined-results.json
          artifacts/
        retention-days: 30 